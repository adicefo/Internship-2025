openapi: 3.0.1
info:
  title: Internship_API
  description: This is the Internship API documentation. My goal is to learn best practices about REST API Design and Architecture.
  version: 1.0.0

servers:
  - url: http://localhost:8081/v2
paths:
  /users/get:
    get:
      tags:
        - Users
      summary: Get Users
      operationId: getUsers
      security:
        - internship_api_security_scheme:
            - read_access

      parameters:
        - name: search
          in: query
          description: Search parameters for filtering users
          required: false
          schema:
            $ref: '#/components/schemas/UserSearchObject'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/List"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/UserDTO"


components:
  securitySchemes:
    internship_api_security_scheme:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://keycloak:8080/realms/Internship_API/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/Internship_API/protocol/openid-connect/token
          scopes:
            read_access: read data
            write_access: modify data
  schemas:
    List:
      type: object
      properties:
        count:
          type: integer
    UserDTO:
      type: object
      properties:
        id:
          type: integer
        surname:
          type: string
        username:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
        gender:
          type: string
        registrationDate:
          type: string
          format: date-time
    UserSearchObject: # Define UserSearchObject schema here
      type: object
      properties:
        pageNumber:
          type: integer
          description: The page number for pagination
        pageSize:
          type: integer
          description: The page size for pagination
        username:
          type: string
          description: The username to filter by
        email:
          type: string
          description: The email to filter by
        name:
          type: string
          description: The name to filter by
        surname:
          type: string
          description: The surname to filter by
